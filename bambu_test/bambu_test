; ModuleID = '43aszjuwba6ubvp0'
source_filename = "43aszjuwba6ubvp0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"core::option::Option<i32>::None" = type {}
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [2 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

; <i32 as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nounwind nonlazybind
define internal i32 @"_ZN47_$LT$i32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hb0c01c9f60a62eacE"(i32 %start1, i64 %n) unnamed_addr #0 !dbg !6 {
start:
  %0 = alloca i32, align 4
  %rhs.dbg.spill = alloca i32, align 4
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i32, align 4
  store i32 %start1, i32* %start.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %start.dbg.spill, metadata !17, metadata !DIExpression()), !dbg !20
  call void @llvm.dbg.declare(metadata i32* %start.dbg.spill, metadata !21, metadata !DIExpression()), !dbg !30
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !18, metadata !DIExpression()), !dbg !32
  %rhs = trunc i64 %n to i32, !dbg !33
  store i32 %rhs, i32* %rhs.dbg.spill, align 4, !dbg !33
  call void @llvm.dbg.declare(metadata i32* %rhs.dbg.spill, metadata !29, metadata !DIExpression()), !dbg !34
  %1 = add nsw i32 %start1, %rhs, !dbg !35
  store i32 %1, i32* %0, align 4, !dbg !35
  %2 = load i32, i32* %0, align 4, !dbg !35, !noundef !19
  ret i32 %2, !dbg !36
}

; core::cmp::impls::<impl core::cmp::PartialOrd for i32>::lt
; Function Attrs: inlinehint nounwind nonlazybind
define internal zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$2lt17hb2247d99e53a7d7aE"(i32* align 4 %self, i32* align 4 %other) unnamed_addr #0 !dbg !37 {
start:
  %other.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca i32*, align 8
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !47, metadata !DIExpression()), !dbg !49
  store i32* %other, i32** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %other.dbg.spill, metadata !48, metadata !DIExpression()), !dbg !50
  %_3 = load i32, i32* %self, align 4, !dbg !51, !noundef !19
  %_4 = load i32, i32* %other, align 4, !dbg !52, !noundef !19
  %0 = icmp slt i32 %_3, %_4, !dbg !51
  ret i1 %0, !dbg !53
}

; core::mem::replace
; Function Attrs: inlinehint nounwind nonlazybind
define i32 @_ZN4core3mem7replace17h6b2b7972bf0c885aE(i32* align 4 %dest, i32 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !54 {
start:
  %dst.dbg.spill = alloca i32*, align 8
  %result.dbg.spill = alloca i32, align 4
  %slot.dbg.spill = alloca i32, align 4
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill3 = alloca i32, align 4
  %self.dbg.spill = alloca i32*, align 8
  %src.dbg.spill2 = alloca i32*, align 8
  %src.dbg.spill = alloca i32, align 4
  %dest.dbg.spill = alloca i32*, align 8
  %tmp = alloca i32, align 4
  %src1 = alloca i32, align 4
  store i32* %dest, i32** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %dest.dbg.spill, metadata !61, metadata !DIExpression()), !dbg !67
  store i32 %src, i32* %src.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %src.dbg.spill, metadata !62, metadata !DIExpression()), !dbg !68
  call void @llvm.dbg.declare(metadata i32* %src1, metadata !69, metadata !DIExpression()), !dbg !78
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !80, metadata !DIExpression()), !dbg !99
  store i32* %dest, i32** %src.dbg.spill2, align 8, !dbg !101
  call void @llvm.dbg.declare(metadata i32** %src.dbg.spill2, metadata !87, metadata !DIExpression()), !dbg !102
  store i32* %tmp, i32** %self.dbg.spill, align 8, !dbg !103
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !104, metadata !DIExpression()), !dbg !111
  %1 = bitcast i32* %tmp to i8*, !dbg !113
  %2 = bitcast i32* %dest to i8*, !dbg !113
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 4, i1 false), !dbg !113
  %self = load i32, i32* %tmp, align 4, !dbg !114
  store i32 %self, i32* %self.dbg.spill3, align 4, !dbg !114
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill3, metadata !115, metadata !DIExpression()), !dbg !135
  br label %bb4, !dbg !137

bb4:                                              ; preds = %start
  store i32 %self, i32* %slot.dbg.spill, align 4, !dbg !138
  call void @llvm.dbg.declare(metadata i32* %slot.dbg.spill, metadata !139, metadata !DIExpression()), !dbg !145
  store i32 %self, i32* %result.dbg.spill, align 4, !dbg !147
  call void @llvm.dbg.declare(metadata i32* %result.dbg.spill, metadata !63, metadata !DIExpression()), !dbg !148
  store i32* %dest, i32** %dst.dbg.spill, align 8, !dbg !149
  call void @llvm.dbg.declare(metadata i32** %dst.dbg.spill, metadata !77, metadata !DIExpression()), !dbg !150
  store i32 %src, i32* %src1, align 4, !dbg !151
  %3 = bitcast i32* %dest to i8*, !dbg !152
  %4 = bitcast i32* %src1 to i8*, !dbg !152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false), !dbg !152
  ret i32 %self, !dbg !153

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !154

bb1:                                              ; preds = %bb2, %bb3
  %5 = bitcast { i8*, i32 }* %0 to i8**, !dbg !155
  %6 = load i8*, i8** %5, align 8, !dbg !155, !noundef !19
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !155
  %8 = load i32, i32* %7, align 8, !dbg !155, !noundef !19
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0, !dbg !155
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1, !dbg !155
  resume { i8*, i32 } %10, !dbg !155

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !154
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nounwind nonlazybind
define { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h9f8d7f7416cd694fE"({ i32, i32 }* align 4 %self) unnamed_addr #0 !dbg !156 {
start:
  %self.dbg.spill = alloca { i32, i32 }*, align 8
  store { i32, i32 }* %self, { i32, i32 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32, i32 }** %self.dbg.spill, metadata !182, metadata !DIExpression()), !dbg !185
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i32, i32 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h966cf52e2bb4845bE"({ i32, i32 }* align 4 %self) #4, !dbg !186
  %1 = extractvalue { i32, i32 } %0, 0, !dbg !186
  %2 = extractvalue { i32, i32 } %0, 1, !dbg !186
  %3 = insertvalue { i32, i32 } undef, i32 %1, 0, !dbg !187
  %4 = insertvalue { i32, i32 } %3, i32 %2, 1, !dbg !187
  ret { i32, i32 } %4, !dbg !187
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind nonlazybind
define { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7009149d287e1006E"(i32 %self.0, i32 %self.1) unnamed_addr #0 !dbg !188 {
start:
  %self.dbg.spill = alloca { i32, i32 }, align 4
  %0 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self.dbg.spill, i32 0, i32 0
  store i32 %self.0, i32* %0, align 4
  %1 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self.dbg.spill, i32 0, i32 1
  store i32 %self.1, i32* %1, align 4
  call void @llvm.dbg.declare(metadata { i32, i32 }* %self.dbg.spill, metadata !196, metadata !DIExpression()), !dbg !199
  %2 = insertvalue { i32, i32 } undef, i32 %self.0, 0, !dbg !200
  %3 = insertvalue { i32, i32 } %2, i32 %self.1, 1, !dbg !200
  ret { i32, i32 } %3, !dbg !200
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nounwind nonlazybind
define { i32, i32 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h966cf52e2bb4845bE"({ i32, i32 }* align 4 %self) unnamed_addr #0 !dbg !201 {
start:
  %self.dbg.spill.i = alloca i32*, align 8
  %n.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca { i32, i32 }*, align 8
  %0 = alloca { i32, i32 }, align 4
  store { i32, i32 }* %self, { i32, i32 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32, i32 }** %self.dbg.spill, metadata !204, metadata !DIExpression()), !dbg !207
  %_3 = bitcast { i32, i32 }* %self to i32*, !dbg !208
  %_4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1, !dbg !209
; call core::cmp::impls::<impl core::cmp::PartialOrd for i32>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$2lt17hb2247d99e53a7d7aE"(i32* align 4 %_3, i32* align 4 %_4) #4, !dbg !208
  br i1 %_2, label %bb2, label %bb6, !dbg !208

bb6:                                              ; preds = %start
  %1 = bitcast { i32, i32 }* %0 to %"core::option::Option<i32>::None"*, !dbg !210
  %2 = bitcast { i32, i32 }* %0 to i32*, !dbg !210
  store i32 0, i32* %2, align 4, !dbg !210
  br label %bb7, !dbg !211

bb2:                                              ; preds = %start
  %_7 = bitcast { i32, i32 }* %self to i32*, !dbg !212
  store i32* %_7, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !213, metadata !DIExpression()), !dbg !222
  %3 = load i32, i32* %_7, align 4, !dbg !224, !noundef !19
; call <i32 as core::iter::range::Step>::forward_unchecked
  %n = call i32 @"_ZN47_$LT$i32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hb0c01c9f60a62eacE"(i32 %3, i64 1) #4, !dbg !225
  store i32 %n, i32* %n.dbg.spill, align 4, !dbg !225
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !205, metadata !DIExpression()), !dbg !226
  %_9 = bitcast { i32, i32 }* %self to i32*, !dbg !227
; call core::mem::replace
  %_8 = call i32 @_ZN4core3mem7replace17h6b2b7972bf0c885aE(i32* align 4 %_9, i32 %n) #4, !dbg !228
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !229
  store i32 %_8, i32* %4, align 4, !dbg !229
  %5 = bitcast { i32, i32 }* %0 to i32*, !dbg !229
  store i32 1, i32* %5, align 4, !dbg !229
  br label %bb7, !dbg !211

bb7:                                              ; preds = %bb6, %bb2
  %6 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0, !dbg !230
  %7 = load i32, i32* %6, align 4, !dbg !230, !range !231, !noundef !19
  %8 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !230
  %9 = load i32, i32* %8, align 4, !dbg !230
  %10 = insertvalue { i32, i32 } undef, i32 %7, 0, !dbg !230
  %11 = insertvalue { i32, i32 } %10, i32 %9, 1, !dbg !230
  ret { i32, i32 } %11, !dbg !230
}

; Function Attrs: nounwind nonlazybind
define void @min_max_rust(i32* %numbers, i32 %numbers_length, i32* align 4 %out_max, i32* align 4 %out_min) unnamed_addr #1 !dbg !232 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i10 = alloca i64, align 8
  %self.dbg.spill.i11 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i4 = alloca i64, align 8
  %self.dbg.spill.i5 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %i.dbg.spill = alloca i32, align 4
  %out_min.dbg.spill = alloca i32*, align 8
  %out_max.dbg.spill = alloca i32*, align 8
  %numbers_length.dbg.spill = alloca i32, align 4
  %numbers.dbg.spill = alloca i32*, align 8
  %_12 = alloca { i32, i32 }, align 4
  %iter = alloca { i32, i32 }, align 4
  %_10 = alloca { i32, i32 }, align 4
  %local_min = alloca i32, align 4
  %local_max = alloca i32, align 4
  store i32* %numbers, i32** %numbers.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %numbers.dbg.spill, metadata !238, metadata !DIExpression()), !dbg !250
  store i32 %numbers_length, i32* %numbers_length.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %numbers_length.dbg.spill, metadata !239, metadata !DIExpression()), !dbg !251
  store i32* %out_max, i32** %out_max.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %out_max.dbg.spill, metadata !240, metadata !DIExpression()), !dbg !252
  store i32* %out_min, i32** %out_min.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %out_min.dbg.spill, metadata !241, metadata !DIExpression()), !dbg !253
  call void @llvm.dbg.declare(metadata i32* %local_max, metadata !242, metadata !DIExpression()), !dbg !254
  call void @llvm.dbg.declare(metadata i32* %local_min, metadata !244, metadata !DIExpression()), !dbg !255
  call void @llvm.dbg.declare(metadata { i32, i32 }* %iter, metadata !246, metadata !DIExpression()), !dbg !256
  store i32* %numbers, i32** %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i14, metadata !257, metadata !DIExpression()), !dbg !267
  store i64 0, i64* %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i13, metadata !266, metadata !DIExpression()), !dbg !269
  store i32* %numbers, i32** %0, align 8, !dbg !270
  %_3.i15 = load i32*, i32** %0, align 8, !dbg !270, !noundef !19
  %6 = load i32, i32* %_3.i15, align 4, !dbg !271, !noundef !19
  store i32 %6, i32* %local_max, align 4, !dbg !271
  store i32* %numbers, i32** %self.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i11, metadata !257, metadata !DIExpression()), !dbg !272
  store i64 0, i64* %count.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i10, metadata !266, metadata !DIExpression()), !dbg !274
  store i32* %numbers, i32** %1, align 8, !dbg !275
  %_3.i12 = load i32*, i32** %1, align 8, !dbg !275, !noundef !19
  %7 = load i32, i32* %_3.i12, align 4, !dbg !276, !noundef !19
  store i32 %7, i32* %local_min, align 4, !dbg !276
  %8 = bitcast { i32, i32 }* %_10 to i32*, !dbg !277
  store i32 0, i32* %8, align 4, !dbg !277
  %9 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_10, i32 0, i32 1, !dbg !277
  store i32 %numbers_length, i32* %9, align 4, !dbg !277
  %10 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_10, i32 0, i32 0, !dbg !277
  %11 = load i32, i32* %10, align 4, !dbg !277, !noundef !19
  %12 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_10, i32 0, i32 1, !dbg !277
  %13 = load i32, i32* %12, align 4, !dbg !277, !noundef !19
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %14 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7009149d287e1006E"(i32 %11, i32 %13) #4, !dbg !277
  %_9.0 = extractvalue { i32, i32 } %14, 0, !dbg !277
  %_9.1 = extractvalue { i32, i32 } %14, 1, !dbg !277
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 0, !dbg !277
  store i32 %_9.0, i32* %15, align 4, !dbg !277
  %16 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 1, !dbg !277
  store i32 %_9.1, i32* %16, align 4, !dbg !277
  br label %bb4, !dbg !278

bb4:                                              ; preds = %bb14, %bb12, %start
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %17 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h9f8d7f7416cd694fE"({ i32, i32 }* align 4 %iter) #4, !dbg !256
  store { i32, i32 } %17, { i32, i32 }* %_12, align 4, !dbg !256
  %18 = bitcast { i32, i32 }* %_12 to i32*, !dbg !256
  %19 = load i32, i32* %18, align 4, !dbg !256, !range !231, !noundef !19
  %_14 = zext i32 %19 to i64, !dbg !256
  %20 = icmp eq i64 %_14, 0, !dbg !256
  br i1 %20, label %bb8, label %bb6, !dbg !256

bb8:                                              ; preds = %bb4
  %_32 = load i32, i32* %local_max, align 4, !dbg !279, !noundef !19
  store i32 %_32, i32* %out_max, align 4, !dbg !280
  %_33 = load i32, i32* %local_min, align 4, !dbg !281, !noundef !19
  store i32 %_33, i32* %out_min, align 4, !dbg !282
  ret void, !dbg !283

bb6:                                              ; preds = %bb4
  %21 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_12, i32 0, i32 1, !dbg !284
  %i = load i32, i32* %21, align 4, !dbg !284, !noundef !19
  store i32 %i, i32* %i.dbg.spill, align 4, !dbg !284
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill, metadata !248, metadata !DIExpression()), !dbg !285
  %_19 = sext i32 %i to i64, !dbg !286
  store i32* %numbers, i32** %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i8, metadata !257, metadata !DIExpression()), !dbg !287
  store i64 %_19, i64* %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i7, metadata !266, metadata !DIExpression()), !dbg !289
  %22 = getelementptr inbounds i32, i32* %numbers, i64 %_19, !dbg !290
  store i32* %22, i32** %2, align 8, !dbg !290
  %_3.i9 = load i32*, i32** %2, align 8, !dbg !290, !noundef !19
  %_17 = load i32, i32* %_3.i9, align 4, !dbg !291, !noundef !19
  %_20 = load i32, i32* %local_max, align 4, !dbg !292, !noundef !19
  %_16 = icmp sgt i32 %_17, %_20, !dbg !291
  br i1 %_16, label %bb10, label %bb12, !dbg !291

bb7:                                              ; No predecessors!
  unreachable, !dbg !256

bb12:                                             ; preds = %bb10, %bb6
  %_27 = sext i32 %i to i64, !dbg !293
  store i32* %numbers, i32** %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i2, metadata !257, metadata !DIExpression()), !dbg !294
  store i64 %_27, i64* %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i1, metadata !266, metadata !DIExpression()), !dbg !296
  %23 = getelementptr inbounds i32, i32* %numbers, i64 %_27, !dbg !297
  store i32* %23, i32** %4, align 8, !dbg !297
  %_3.i3 = load i32*, i32** %4, align 8, !dbg !297, !noundef !19
  %_25 = load i32, i32* %_3.i3, align 4, !dbg !298, !noundef !19
  %_28 = load i32, i32* %local_min, align 4, !dbg !299, !noundef !19
  %_24 = icmp slt i32 %_25, %_28, !dbg !298
  br i1 %_24, label %bb14, label %bb4, !dbg !298

bb10:                                             ; preds = %bb6
  %_23 = sext i32 %i to i64, !dbg !300
  store i32* %numbers, i32** %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i5, metadata !257, metadata !DIExpression()), !dbg !301
  store i64 %_23, i64* %count.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i4, metadata !266, metadata !DIExpression()), !dbg !303
  %24 = getelementptr inbounds i32, i32* %numbers, i64 %_23, !dbg !304
  store i32* %24, i32** %3, align 8, !dbg !304
  %_3.i6 = load i32*, i32** %3, align 8, !dbg !304, !noundef !19
  %_21 = load i32, i32* %_3.i6, align 4, !dbg !305, !noundef !19
  store i32 %_21, i32* %local_max, align 4, !dbg !306
  br label %bb12, !dbg !307

bb14:                                             ; preds = %bb12
  %_31 = sext i32 %i to i64, !dbg !308
  store i32* %numbers, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !257, metadata !DIExpression()), !dbg !309
  store i64 %_31, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !266, metadata !DIExpression()), !dbg !311
  %25 = getelementptr inbounds i32, i32* %numbers, i64 %_31, !dbg !312
  store i32* %25, i32** %5, align 8, !dbg !312
  %_3.i = load i32*, i32** %5, align 8, !dbg !312, !noundef !19
  %_29 = load i32, i32* %_3.i, align 4, !dbg !313, !noundef !19
  store i32 %_29, i32* %local_min, align 4, !dbg !314
  br label %bb4, !dbg !315
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nounwind nonlazybind
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #1

; Function Attrs: argmemonly nocallback nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

attributes #0 = { inlinehint nounwind nonlazybind "probe-stack"="__rust_probestack" "target-cpu"="generic" }
attributes #1 = { nounwind nonlazybind "probe-stack"="__rust_probestack" "target-cpu"="generic" }
attributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nocallback nofree nounwind willreturn }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.dbg.cu = !{!4}

!0 = !{i32 7, !"PIC Level", i32 2}
!1 = !{i32 2, !"RtLibUseGOT", i32 1}
!2 = !{i32 2, !"Dwarf Version", i32 4}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !5, producer: "clang LLVM (rustc version 1.69.0 (84c898d65 2023-04-16))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false)
!5 = !DIFile(filename: "bambu_test/src/lib.rs/@/43aszjuwba6ubvp0", directory: "/mnt/c/Users/ohoff/Projects/rust_synthesis_test")
!6 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN47_$LT$i32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hb0c01c9f60a62eacE", scope: !8, file: !7, line: 188, type: !12, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4, templateParams: !19, retainedNodes: !16)
!7 = !DIFile(filename: "/rustc/84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc/library/core/src/iter/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "2d5fcf1d26f4879d14af333156101b2a")
!8 = !DINamespace(name: "{impl#34}", scope: !9)
!9 = !DINamespace(name: "range", scope: !10)
!10 = !DINamespace(name: "iter", scope: !11)
!11 = !DINamespace(name: "core", scope: null)
!12 = !DISubroutineType(types: !13)
!13 = !{!14, !14, !15}
!14 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!15 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!16 = !{!17, !18}
!17 = !DILocalVariable(name: "start", arg: 1, scope: !6, file: !7, line: 188, type: !14)
!18 = !DILocalVariable(name: "n", arg: 2, scope: !6, file: !7, line: 188, type: !15)
!19 = !{}
!20 = !DILocation(line: 188, column: 37, scope: !6)
!21 = !DILocalVariable(name: "self", scope: !22, file: !23, line: 477, type: !14, align: 4)
!22 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$13unchecked_add17hdda6590edc1d6d7eE", scope: !24, file: !23, line: 477, type: !26, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4, templateParams: !19, retainedNodes: !28)
!23 = !DIFile(filename: "/rustc/84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc/library/core/src/num/int_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "7c9d22d8d2e1d9742bccc1dbc079da0e")
!24 = !DINamespace(name: "{impl#2}", scope: !25)
!25 = !DINamespace(name: "num", scope: !11)
!26 = !DISubroutineType(types: !27)
!27 = !{!14, !14, !14}
!28 = !{!21, !29}
!29 = !DILocalVariable(name: "rhs", scope: !22, file: !23, line: 477, type: !14, align: 4)
!30 = !DILocation(line: 477, column: 43, scope: !22, inlinedAt: !31)
!31 = !DILocation(line: 190, column: 28, scope: !6)
!32 = !DILocation(line: 188, column: 50, scope: !6)
!33 = !DILocation(line: 190, column: 42, scope: !6)
!34 = !DILocation(line: 477, column: 49, scope: !22, inlinedAt: !31)
!35 = !DILocation(line: 480, column: 22, scope: !22, inlinedAt: !31)
!36 = !DILocation(line: 191, column: 10, scope: !6)
!37 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$2lt17hb2247d99e53a7d7aE", scope: !39, file: !38, line: 1383, type: !42, scopeLine: 1383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4, templateParams: !19, retainedNodes: !46)
!38 = !DIFile(filename: "/rustc/84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "06d0a8a3d87d7fc4399a4649e8eb1f12")
!39 = !DINamespace(name: "{impl#72}", scope: !40)
!40 = !DINamespace(name: "impls", scope: !41)
!41 = !DINamespace(name: "cmp", scope: !11)
!42 = !DISubroutineType(types: !43)
!43 = !{!44, !45, !45}
!44 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&i32", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!46 = !{!47, !48}
!47 = !DILocalVariable(name: "self", arg: 1, scope: !37, file: !38, line: 1383, type: !45)
!48 = !DILocalVariable(name: "other", arg: 2, scope: !37, file: !38, line: 1383, type: !45)
!49 = !DILocation(line: 1383, column: 23, scope: !37)
!50 = !DILocation(line: 1383, column: 30, scope: !37)
!51 = !DILocation(line: 1383, column: 52, scope: !37)
!52 = !DILocation(line: 1383, column: 62, scope: !37)
!53 = !DILocation(line: 1383, column: 72, scope: !37)
!54 = distinct !DISubprogram(name: "replace<i32>", linkageName: "_ZN4core3mem7replace17h6b2b7972bf0c885aE", scope: !56, file: !55, line: 904, type: !57, scopeLine: 904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4, templateParams: !65, retainedNodes: !60)
!55 = !DIFile(filename: "/rustc/84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "2818803a2f5479a3883c65b3bb9963fd")
!56 = !DINamespace(name: "mem", scope: !11)
!57 = !DISubroutineType(types: !58)
!58 = !{!14, !59, !14}
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut i32", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!60 = !{!61, !62, !63}
!61 = !DILocalVariable(name: "dest", arg: 1, scope: !54, file: !55, line: 904, type: !59)
!62 = !DILocalVariable(name: "src", arg: 2, scope: !54, file: !55, line: 904, type: !14)
!63 = !DILocalVariable(name: "result", scope: !64, file: !55, line: 909, type: !14, align: 4)
!64 = distinct !DILexicalBlock(scope: !54, file: !55, line: 909, column: 9)
!65 = !{!66}
!66 = !DITemplateTypeParameter(name: "T", type: !14)
!67 = !DILocation(line: 904, column: 25, scope: !54)
!68 = !DILocation(line: 904, column: 39, scope: !54)
!69 = !DILocalVariable(name: "src", scope: !70, file: !71, line: 1338, type: !14, align: 4)
!70 = distinct !DISubprogram(name: "write<i32>", linkageName: "_ZN4core3ptr5write17h28ce839543cbfbb3E", scope: !72, file: !71, line: 1338, type: !73, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4, templateParams: !65, retainedNodes: !76)
!71 = !DIFile(filename: "/rustc/84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "bdd6b96186b52f0612a564cb734428a7")
!72 = !DINamespace(name: "ptr", scope: !11)
!73 = !DISubroutineType(types: !74)
!74 = !{null, !75, !14}
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut i32", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!76 = !{!77, !69}
!77 = !DILocalVariable(name: "dst", scope: !70, file: !71, line: 1338, type: !75, align: 8)
!78 = !DILocation(line: 1338, column: 43, scope: !70, inlinedAt: !79)
!79 = !DILocation(line: 910, column: 9, scope: !64)
!80 = !DILocalVariable(name: "tmp", scope: !81, file: !71, line: 1145, type: !88, align: 4)
!81 = distinct !DILexicalBlock(scope: !82, file: !71, line: 1145, column: 5)
!82 = distinct !DISubprogram(name: "read<i32>", linkageName: "_ZN4core3ptr4read17h08dfb72517394562E", scope: !72, file: !71, line: 1137, type: !83, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4, templateParams: !65, retainedNodes: !86)
!83 = !DISubroutineType(types: !84)
!84 = !{!14, !85}
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const i32", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!86 = !{!87, !80}
!87 = !DILocalVariable(name: "src", scope: !82, file: !71, line: 1137, type: !85, align: 8)
!88 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<i32>", scope: !90, file: !89, size: 32, align: 32, elements: !91, templateParams: !65, identifier: "d510886f5e4e17461bbfc9e4bba421d6")
!89 = !DIFile(filename: "<unknown>", directory: "")
!90 = !DINamespace(name: "maybe_uninit", scope: !56)
!91 = !{!92, !94}
!92 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !88, file: !89, baseType: !93, align: 8)
!93 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !88, file: !89, baseType: !95, size: 32, align: 32)
!95 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<i32>", scope: !96, file: !89, size: 32, align: 32, elements: !97, templateParams: !65, identifier: "95eae5c49d7218388ab8bef2f7f05d0a")
!96 = !DINamespace(name: "manually_drop", scope: !56)
!97 = !{!98}
!98 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !95, file: !89, baseType: !14, size: 32, align: 32)
!99 = !DILocation(line: 1145, column: 9, scope: !81, inlinedAt: !100)
!100 = !DILocation(line: 909, column: 22, scope: !54)
!101 = !DILocation(line: 909, column: 32, scope: !54)
!102 = !DILocation(line: 1137, column: 29, scope: !82, inlinedAt: !100)
!103 = !DILocation(line: 1157, column: 34, scope: !81, inlinedAt: !100)
!104 = !DILocalVariable(name: "self", scope: !105, file: !106, line: 567, type: !109, align: 8)
!105 = distinct !DISubprogram(name: "as_mut_ptr<i32>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h8f79745655f3bedaE", scope: !88, file: !106, line: 567, type: !107, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4, templateParams: !65, retainedNodes: !110)
!106 = !DIFile(filename: "/rustc/84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "1414c0f1ab8ce712ce2deada2fd51b28")
!107 = !DISubroutineType(types: !108)
!108 = !{!75, !109}
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<i32>", baseType: !88, size: 64, align: 64, dwarfAddressSpace: 0)
!110 = !{!104}
!111 = !DILocation(line: 567, column: 29, scope: !105, inlinedAt: !112)
!112 = !DILocation(line: 1157, column: 38, scope: !81, inlinedAt: !100)
!113 = !DILocation(line: 1157, column: 9, scope: !81, inlinedAt: !100)
!114 = !DILocation(line: 1158, column: 9, scope: !81, inlinedAt: !100)
!115 = !DILocalVariable(name: "self", scope: !116, file: !106, line: 622, type: !88, align: 4)
!116 = distinct !DISubprogram(name: "assume_init<i32>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h4efd6553cb647c43E", scope: !88, file: !106, line: 622, type: !117, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4, templateParams: !65, retainedNodes: !134)
!117 = !DISubroutineType(types: !118)
!118 = !{!14, !88, !119}
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !120, size: 64, align: 64, dwarfAddressSpace: 0)
!120 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !121, file: !89, size: 192, align: 64, elements: !123, templateParams: !19, identifier: "c982efb4795b9757a2e4032b9ff7b6")
!121 = !DINamespace(name: "location", scope: !122)
!122 = !DINamespace(name: "panic", scope: !11)
!123 = !{!124, !131, !133}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !120, file: !89, baseType: !125, size: 128, align: 64)
!125 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !89, size: 128, align: 64, elements: !126, templateParams: !19, identifier: "c67d244f92c53ee233f4a290be1c6ff8")
!126 = !{!127, !130}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !125, file: !89, baseType: !128, size: 64, align: 64)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64, align: 64, dwarfAddressSpace: 0)
!129 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !125, file: !89, baseType: !15, size: 64, align: 64, offset: 64)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !120, file: !89, baseType: !132, size: 32, align: 32, offset: 128)
!132 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !120, file: !89, baseType: !132, size: 32, align: 32, offset: 160)
!134 = !{!115}
!135 = !DILocation(line: 622, column: 37, scope: !116, inlinedAt: !136)
!136 = !DILocation(line: 1158, column: 13, scope: !81, inlinedAt: !100)
!137 = !DILocation(line: 626, column: 13, scope: !116, inlinedAt: !136)
!138 = !DILocation(line: 627, column: 38, scope: !116, inlinedAt: !136)
!139 = !DILocalVariable(name: "slot", scope: !140, file: !141, line: 88, type: !95, align: 4)
!140 = distinct !DISubprogram(name: "into_inner<i32>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h7a7515f9f450f264E", scope: !95, file: !141, line: 88, type: !142, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4, templateParams: !65, retainedNodes: !144)
!141 = !DIFile(filename: "/rustc/84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "a34f39f0c1c25c8378cd3f4ec0bf00c3")
!142 = !DISubroutineType(types: !143)
!143 = !{!14, !95}
!144 = !{!139}
!145 = !DILocation(line: 88, column: 29, scope: !140, inlinedAt: !146)
!146 = !DILocation(line: 627, column: 13, scope: !116, inlinedAt: !136)
!147 = !DILocation(line: 89, column: 9, scope: !140, inlinedAt: !146)
!148 = !DILocation(line: 909, column: 13, scope: !64)
!149 = !DILocation(line: 910, column: 20, scope: !64)
!150 = !DILocation(line: 1338, column: 30, scope: !70, inlinedAt: !79)
!151 = !DILocation(line: 910, column: 26, scope: !64)
!152 = !DILocation(line: 1354, column: 9, scope: !70, inlinedAt: !79)
!153 = !DILocation(line: 913, column: 2, scope: !54)
!154 = !DILocation(line: 913, column: 1, scope: !54)
!155 = !DILocation(line: 904, column: 1, scope: !54)
!156 = distinct !DISubprogram(name: "next<i32>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h9f8d7f7416cd694fE", scope: !157, file: !7, line: 709, type: !158, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4, templateParams: !183, retainedNodes: !181)
!157 = !DINamespace(name: "{impl#3}", scope: !9)
!158 = !DISubroutineType(types: !159)
!159 = !{!160, !172}
!160 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<i32>", scope: !161, file: !89, size: 64, align: 32, elements: !162, templateParams: !19, identifier: "c7e8c2004772c5ed71fdefa2520baded")
!161 = !DINamespace(name: "option", scope: !11)
!162 = !{!163}
!163 = !DICompositeType(tag: DW_TAG_variant_part, scope: !160, file: !89, size: 64, align: 32, elements: !164, templateParams: !19, identifier: "ba26e8e62369b18c54428912c5bbdf9f", discriminator: !171)
!164 = !{!165, !167}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !163, file: !89, baseType: !166, size: 64, align: 32, extraData: i64 0)
!166 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !160, file: !89, size: 64, align: 32, elements: !19, templateParams: !65, identifier: "2b2cf58f3d83e58b16d1e0b39eb292f6")
!167 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !163, file: !89, baseType: !168, size: 64, align: 32, extraData: i64 1)
!168 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !160, file: !89, size: 64, align: 32, elements: !169, templateParams: !65, identifier: "aa4e022cdea330b0a705664ba0cf6b6")
!169 = !{!170}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !168, file: !89, baseType: !14, size: 32, align: 32, offset: 32)
!171 = !DIDerivedType(tag: DW_TAG_member, scope: !160, file: !89, baseType: !132, size: 32, align: 32, flags: DIFlagArtificial)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::range::Range<i32>", baseType: !173, size: 64, align: 64, dwarfAddressSpace: 0)
!173 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<i32>", scope: !174, file: !89, size: 64, align: 32, elements: !176, templateParams: !179, identifier: "2ab05a158d8ae282243284b82ecff7d9")
!174 = !DINamespace(name: "range", scope: !175)
!175 = !DINamespace(name: "ops", scope: !11)
!176 = !{!177, !178}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !173, file: !89, baseType: !14, size: 32, align: 32)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !173, file: !89, baseType: !14, size: 32, align: 32, offset: 32)
!179 = !{!180}
!180 = !DITemplateTypeParameter(name: "Idx", type: !14)
!181 = !{!182}
!182 = !DILocalVariable(name: "self", arg: 1, scope: !156, file: !7, line: 709, type: !172)
!183 = !{!184}
!184 = !DITemplateTypeParameter(name: "A", type: !14)
!185 = !DILocation(line: 709, column: 13, scope: !156)
!186 = !DILocation(line: 710, column: 9, scope: !156)
!187 = !DILocation(line: 711, column: 6, scope: !156)
!188 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<i32>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7009149d287e1006E", scope: !190, file: !189, line: 272, type: !193, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4, templateParams: !197, retainedNodes: !195)
!189 = !DIFile(filename: "/rustc/84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "697d559cdba63f105535b8b53d6ea422")
!190 = !DINamespace(name: "{impl#0}", scope: !191)
!191 = !DINamespace(name: "collect", scope: !192)
!192 = !DINamespace(name: "traits", scope: !10)
!193 = !DISubroutineType(types: !194)
!194 = !{!173, !173}
!195 = !{!196}
!196 = !DILocalVariable(name: "self", arg: 1, scope: !188, file: !189, line: 272, type: !173)
!197 = !{!198}
!198 = !DITemplateTypeParameter(name: "I", type: !173)
!199 = !DILocation(line: 272, column: 18, scope: !188)
!200 = !DILocation(line: 274, column: 6, scope: !188)
!201 = distinct !DISubprogram(name: "spec_next<i32>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h966cf52e2bb4845bE", scope: !202, file: !7, line: 619, type: !158, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4, templateParams: !65, retainedNodes: !203)
!202 = !DINamespace(name: "{impl#2}", scope: !9)
!203 = !{!204, !205}
!204 = !DILocalVariable(name: "self", arg: 1, scope: !201, file: !7, line: 619, type: !172)
!205 = !DILocalVariable(name: "n", scope: !206, file: !7, line: 622, type: !14, align: 4)
!206 = distinct !DILexicalBlock(scope: !201, file: !7, line: 622, column: 13)
!207 = !DILocation(line: 619, column: 18, scope: !201)
!208 = !DILocation(line: 620, column: 12, scope: !201)
!209 = !DILocation(line: 620, column: 25, scope: !201)
!210 = !DILocation(line: 625, column: 13, scope: !201)
!211 = !DILocation(line: 620, column: 9, scope: !201)
!212 = !DILocation(line: 622, column: 54, scope: !201)
!213 = !DILocalVariable(name: "self", arg: 1, scope: !214, file: !215, line: 188, type: !45)
!214 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17h1e20668dc9d028aeE", scope: !216, file: !215, line: 188, type: !219, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4, templateParams: !19, retainedNodes: !221)
!215 = !DIFile(filename: "/rustc/84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc/library/core/src/clone.rs", directory: "", checksumkind: CSK_MD5, checksum: "d116d2b81cbc11c420da76ff7ce51e4d")
!216 = !DINamespace(name: "{impl#14}", scope: !217)
!217 = !DINamespace(name: "impls", scope: !218)
!218 = !DINamespace(name: "clone", scope: !11)
!219 = !DISubroutineType(types: !220)
!220 = !{!14, !45}
!221 = !{!213}
!222 = !DILocation(line: 188, column: 30, scope: !214, inlinedAt: !223)
!223 = distinct !DILocation(line: 622, column: 54, scope: !201)
!224 = !DILocation(line: 189, column: 25, scope: !214, inlinedAt: !223)
!225 = !DILocation(line: 622, column: 30, scope: !201)
!226 = !DILocation(line: 622, column: 17, scope: !206)
!227 = !DILocation(line: 623, column: 31, scope: !206)
!228 = !DILocation(line: 623, column: 18, scope: !206)
!229 = !DILocation(line: 623, column: 13, scope: !206)
!230 = !DILocation(line: 627, column: 6, scope: !201)
!231 = !{i32 0, i32 2}
!232 = distinct !DISubprogram(name: "min_max_rust", scope: !234, file: !233, line: 4, type: !235, scopeLine: 4, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4, templateParams: !19, retainedNodes: !237)
!233 = !DIFile(filename: "bambu_test/src/lib.rs", directory: "/mnt/c/Users/ohoff/Projects/rust_synthesis_test", checksumkind: CSK_MD5, checksum: "891a374c9b4e41225ea666eb58986189")
!234 = !DINamespace(name: "bambu_test", scope: null)
!235 = !DISubroutineType(types: !236)
!236 = !{null, !75, !14, !59, !59}
!237 = !{!238, !239, !240, !241, !242, !244, !246, !248}
!238 = !DILocalVariable(name: "numbers", arg: 1, scope: !232, file: !233, line: 5, type: !75)
!239 = !DILocalVariable(name: "numbers_length", arg: 2, scope: !232, file: !233, line: 6, type: !14)
!240 = !DILocalVariable(name: "out_max", arg: 3, scope: !232, file: !233, line: 7, type: !59)
!241 = !DILocalVariable(name: "out_min", arg: 4, scope: !232, file: !233, line: 8, type: !59)
!242 = !DILocalVariable(name: "local_max", scope: !243, file: !233, line: 10, type: !14, align: 4)
!243 = distinct !DILexicalBlock(scope: !232, file: !233, line: 10, column: 5)
!244 = !DILocalVariable(name: "local_min", scope: !245, file: !233, line: 11, type: !14, align: 4)
!245 = distinct !DILexicalBlock(scope: !243, file: !233, line: 11, column: 5)
!246 = !DILocalVariable(name: "iter", scope: !247, file: !233, line: 12, type: !173, align: 4)
!247 = distinct !DILexicalBlock(scope: !245, file: !233, line: 12, column: 5)
!248 = !DILocalVariable(name: "i", scope: !249, file: !233, line: 12, type: !14, align: 4)
!249 = distinct !DILexicalBlock(scope: !247, file: !233, line: 12, column: 32)
!250 = !DILocation(line: 5, column: 5, scope: !232)
!251 = !DILocation(line: 6, column: 5, scope: !232)
!252 = !DILocation(line: 7, column: 5, scope: !232)
!253 = !DILocation(line: 8, column: 5, scope: !232)
!254 = !DILocation(line: 10, column: 9, scope: !243)
!255 = !DILocation(line: 11, column: 9, scope: !245)
!256 = !DILocation(line: 12, column: 14, scope: !247)
!257 = !DILocalVariable(name: "self", arg: 1, scope: !258, file: !259, line: 472, type: !75)
!258 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hb1632bb0cb28e599E", scope: !260, file: !259, line: 472, type: !262, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4, templateParams: !65, retainedNodes: !265)
!259 = !DIFile(filename: "/rustc/84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "8f9c2a68da2d937402d223242416154f")
!260 = !DINamespace(name: "{impl#0}", scope: !261)
!261 = !DINamespace(name: "mut_ptr", scope: !72)
!262 = !DISubroutineType(types: !263)
!263 = !{!75, !75, !264}
!264 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!265 = !{!257, !266}
!266 = !DILocalVariable(name: "count", arg: 2, scope: !258, file: !259, line: 472, type: !264)
!267 = !DILocation(line: 472, column: 32, scope: !258, inlinedAt: !268)
!268 = distinct !DILocation(line: 10, column: 26, scope: !232)
!269 = !DILocation(line: 472, column: 38, scope: !258, inlinedAt: !268)
!270 = !DILocation(line: 479, column: 18, scope: !258, inlinedAt: !268)
!271 = !DILocation(line: 10, column: 25, scope: !232)
!272 = !DILocation(line: 472, column: 32, scope: !258, inlinedAt: !273)
!273 = distinct !DILocation(line: 11, column: 26, scope: !243)
!274 = !DILocation(line: 472, column: 38, scope: !258, inlinedAt: !273)
!275 = !DILocation(line: 479, column: 18, scope: !258, inlinedAt: !273)
!276 = !DILocation(line: 11, column: 25, scope: !243)
!277 = !DILocation(line: 12, column: 14, scope: !245)
!278 = !DILocation(line: 12, column: 5, scope: !247)
!279 = !DILocation(line: 20, column: 16, scope: !245)
!280 = !DILocation(line: 20, column: 5, scope: !245)
!281 = !DILocation(line: 21, column: 16, scope: !245)
!282 = !DILocation(line: 21, column: 5, scope: !245)
!283 = !DILocation(line: 22, column: 2, scope: !232)
!284 = !DILocation(line: 12, column: 9, scope: !247)
!285 = !DILocation(line: 12, column: 9, scope: !249)
!286 = !DILocation(line: 13, column: 28, scope: !249)
!287 = !DILocation(line: 472, column: 32, scope: !258, inlinedAt: !288)
!288 = distinct !DILocation(line: 13, column: 13, scope: !249)
!289 = !DILocation(line: 472, column: 38, scope: !258, inlinedAt: !288)
!290 = !DILocation(line: 479, column: 18, scope: !258, inlinedAt: !288)
!291 = !DILocation(line: 13, column: 12, scope: !249)
!292 = !DILocation(line: 13, column: 42, scope: !249)
!293 = !DILocation(line: 16, column: 28, scope: !249)
!294 = !DILocation(line: 472, column: 32, scope: !258, inlinedAt: !295)
!295 = distinct !DILocation(line: 16, column: 13, scope: !249)
!296 = !DILocation(line: 472, column: 38, scope: !258, inlinedAt: !295)
!297 = !DILocation(line: 479, column: 18, scope: !258, inlinedAt: !295)
!298 = !DILocation(line: 16, column: 12, scope: !249)
!299 = !DILocation(line: 16, column: 42, scope: !249)
!300 = !DILocation(line: 14, column: 41, scope: !249)
!301 = !DILocation(line: 472, column: 32, scope: !258, inlinedAt: !302)
!302 = distinct !DILocation(line: 14, column: 26, scope: !249)
!303 = !DILocation(line: 472, column: 38, scope: !258, inlinedAt: !302)
!304 = !DILocation(line: 479, column: 18, scope: !258, inlinedAt: !302)
!305 = !DILocation(line: 14, column: 25, scope: !249)
!306 = !DILocation(line: 14, column: 13, scope: !249)
!307 = !DILocation(line: 13, column: 9, scope: !249)
!308 = !DILocation(line: 17, column: 41, scope: !249)
!309 = !DILocation(line: 472, column: 32, scope: !258, inlinedAt: !310)
!310 = distinct !DILocation(line: 17, column: 26, scope: !249)
!311 = !DILocation(line: 472, column: 38, scope: !258, inlinedAt: !310)
!312 = !DILocation(line: 479, column: 18, scope: !258, inlinedAt: !310)
!313 = !DILocation(line: 17, column: 25, scope: !249)
!314 = !DILocation(line: 17, column: 13, scope: !249)
!315 = !DILocation(line: 16, column: 9, scope: !249)
